let TimeWindow = 30d;  // Adjust the time window as needed

// Define a list of suspicious processes commonly associated with malicious API calls
let suspiciousProcesses = dynamic(["rundll32.exe", "powershell.exe", "cmd.exe", "wmic.exe", "cscript.exe", "vbs.exe"]);

// Define known malicious API patterns
let apiIndicators = dynamic(["CreateRemoteThread", "WriteProcessMemory", "VirtualAlloc", "NtCreateThreadEx", "LoadLibrary", "SetWindowsHookEx"]);

// Step 1: Monitor process creation events for suspicious processes
let apiCalls = DeviceProcessEvents
| where TimeGenerated >= ago(TimeWindow)
| where FileName in (suspiciousProcesses)
| where ProcessCommandLine has_any (apiIndicators)  // Check for command line patterns indicating API calls
| project TimeGenerated, DeviceName, InitiatingProcessAccountName, FileName, ProcessCommandLine, ProcessId, ParentProcessId;

// Step 2: Join with network events to identify suspicious behavior
let networkEvents = DeviceNetworkEvents
| where TimeGenerated >= ago(TimeWindow)
| where RemoteUrl has "malicious.com"  // Replace with known malicious domains
| project TimeGenerated, DeviceName, RemoteUrl, InitiatingProcessFileName;

// Combine results to find correlations
apiCalls
| join kind=inner (networkEvents) on DeviceName
| project apiCalls.TimeGenerated, apiCalls.DeviceName, apiCalls.InitiatingProcessAccountName,
         apiCalls.FileName, apiCalls.ProcessCommandLine, networkEvents.RemoteUrl
| order by apiCalls.TimeGenerated desc
